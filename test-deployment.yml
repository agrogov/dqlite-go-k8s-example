apiVersion: v1
kind: Namespace
metadata:
  labels:
    io.portainer.kubernetes.application.name: test-app
    io.portainer.kubernetes.application.owner: admin
    kubernetes.io/metadata.name: go-k8s-test-app
  name: go-k8s-test-app
spec:
  finalizers:
    - kubernetes

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  namespace: go-k8s-test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      serviceAccountName: go-k8s-test-app-sa
      containers:
      - name: go-k8s-test-app
        image: localhost:32000/go-k8s-test-app:registry
        imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: go-k8s-test-app-svc
  namespace: go-k8s-test-app
spec:
  ports:
  - port: 9001
    targetPort: 9001
    protocol: TCP
  selector:
    app: test-app
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: go-k8s-test-app-sa
  namespace: go-k8s-test-app

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-reader
  namespace: go-k8s-test-app
rules:
- apiGroups: [""]
  resources: ["services", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: service-reader-binding
  namespace: go-k8s-test-app
subjects:
- kind: ServiceAccount
  name: go-k8s-test-app-sa
  namespace: go-k8s-test-app
roleRef:
  kind: Role
  name: service-reader
  apiGroup: rbac.authorization.k8s.io
